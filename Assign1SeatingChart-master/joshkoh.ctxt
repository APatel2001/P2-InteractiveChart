#BlueJ class context
comment0.target=joshkoh
comment0.text=\r\n\ Write\ a\ description\ of\ class\ joshkoh\ here.\r\n\ \r\n\ @author\ (your\ name)\ \r\n\ @version\ (a\ version\ number\ or\ a\ date)\r\n
comment1.params=f\ l\ r\ s
comment1.target=joshkoh(java.lang.String,\ java.lang.String,\ int,\ int)
comment1.text=\r\n\ Constructor\ for\ the\ KilgoreTrout\ class.\r\n\ Constructors\ are\ special\ methods\ with\ the\ same\ exact\ name\ as\ the\ class\ name.\ \ \r\n\ Constructors\ to\ not\ have\ return\ types.\r\n\ Constructors\ can\ be\ overloaded.\ This\ means\ we\ can\ call\ a\ constructor\ with\ different\ sets\ of\ parameter\r\n\ \ lists\ to\ initalize\ for\ different\ conditions\ (depending\ on\ what\ constructors\ have\ been\ written.\r\n\ @param\ String\ f\ (firstname)\r\n\ @param\ String\ l\ (lastname)\r\n\ @param\ int\ r\ (row\ of\ seating\ arrangement)\r\n\ @param\ int\ s\ (seat\ number\ within\ row\ seating\ arrangement)\r\n\ \r\n
comment2.params=
comment2.target=joshkoh()
comment2.text=\r\n\ Default\ constructor,\ if\ you\ don't\ pass\ in\ a\ name\ and\ seating\ location\r\n\ Pay\ attention\ to\ how\ the\ row\ and\ seat\ variables\ set\ the\ location\ of\ the\ image.\ \ 1,1\ is\ the\ first\ cell\ in\ the\ upper\ left\r\n\ of\ the\ classroom.\r\n
comment3.params=
comment3.target=void\ act()
comment3.text=\r\n\ Act\ -\ do\ whatever\ the\ KilgoreTrout\ actor\ wants\ to\ do.\ This\ method\ is\ called\ whenever\r\n\ the\ 'Act'\ or\ 'Run'\ button\ gets\ pressed\ in\ the\ environment.\r\n
comment4.params=
comment4.target=void\ getName()
comment4.text=\r\n\ Prints\ the\ first\ and\ last\ name\ to\ the\ console\r\n
comment5.params=
comment5.target=void\ answerQuestion()
comment5.text=\r\n\ This\ method\ needs\ to\ allow\ the\ user\ to\ interact\ with\ the\ student\ through\ a\ question\ and\ answer\ interface,\ and\ provide\r\n\ some\ mechanism\ that\ allows\ the\ student\ to\ sit\ down\ once\ the\ Q&A\ session\ ends.\ \ You\ can\ use\ this\ basic\ model,\ or\ come\ up\r\n\ with\ some\ additional\ class\ and\ object\ that\ represents\ a\ blackboard,\ or\ a\ talking\ cartoon\ bubble\ etc.\ If\ you\ provide\ extra\r\n\ classes,\ make\ sure\ to\ fully\ document\ so\ other\ students\ can\ use\ the\ same\ interface.\r\n
comment6.params=
comment6.target=void\ mlg()
comment7.params=s
comment7.target=void\ myHobby(java.lang.String)
numComments=8
