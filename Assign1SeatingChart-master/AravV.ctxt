#BlueJ class context
comment0.target=AravV
comment0.text=\n\ Model\ that\ represents\ AravV\ position\ in\ the\ \ class\ seating\ chart\n\ \n\ @Arav\ Vyawahare\n\ @9/15/2019\ \n
comment1.params=f\ l\ r\ s
comment1.target=AravV(java.lang.String,\ java.lang.String,\ int,\ int)
comment1.text=\n\ Constructor\ for\ the\ AravV\ class.\n\ Constructors\ are\ special\ methods\ with\ the\ same\ exact\ name\ as\ the\ class\ name.\ \ \n\ Constructors\ to\ not\ have\ return\ types.\n\ Constructors\ can\ be\ overloaded.\ This\ means\ we\ can\ call\ a\ constructor\ with\ different\ sets\ of\ parameter\n\ \ lists\ to\ initalize\ for\ different\ conditions\ (depending\ on\ what\ constructors\ have\ been\ written.\n\ @param\ String\ f\ (firstname)\n\ @param\ String\ l\ (lastname)\n\ @param\ int\ r\ (row\ of\ seating\ arrangement)\n\ @param\ int\ s\ (seat\ number\ within\ row\ seating\ arrangement)\n\ \n
comment2.params=
comment2.target=AravV()
comment2.text=\n\ Default\ constructor,\ if\ you\ don't\ pass\ in\ a\ name\ and\ seating\ location\n\ Pay\ attention\ to\ how\ the\ row\ and\ seat\ variables\ set\ the\ location\ of\ the\ image.\ \ 1,1\ is\ the\ first\ cell\ in\ the\ upper\ left\n\ of\ the\ classroom.\n
comment3.params=
comment3.target=void\ numberStudents()
comment4.params=
comment4.target=void\ act()
comment4.text=\n\ Act\ which\ does\ what\ the\ AravV\ actor\ does\n\ Method\ called\ when\ button\ gets\ pressed.\n\ Used\ to\ show\ hard\ topics.\n
comment5.params=
comment5.target=void\ getName()
comment5.text=\n\ Prints\ the\ first\ and\ last\ name\ to\ the\ console\n
comment6.params=
comment6.target=void\ answerQuestion()
comment6.text=\n\ This\ method\ needs\ to\ allow\ the\ user\ to\ interact\ with\ the\ student\ through\ a\ question\ and\ answer\ interface,\ and\ provide\n\ some\ mechanism\ that\ allows\ the\ student\ to\ sit\ down\ once\ the\ Q&A\ session\ ends.\ \ You\ can\ use\ this\ basic\ model,\ or\ come\ up\n\ with\ some\ additional\ class\ and\ object\ that\ represents\ a\ blackboard,\ or\ a\ talking\ cartoon\ bubble\ etc.\ If\ you\ provide\ extra\n\ classes,\ make\ sure\ to\ fully\ document\ so\ other\ students\ can\ use\ the\ same\ interface.\n
comment7.params=
comment7.target=void\ circleClass()
comment7.text=\n\ Animation\ class\ for\ AravV\n\ Using\ a\ 2D\ array\ and\ random\ number\ generator\ to\ teleport\ around\n
comment8.params=s
comment8.target=void\ myHobby(java.lang.String)
comment8.text=\n\ This\ method\ uses\ the\ SpecialInterestOrHobby\ interface\ to\ print\ my\ hobby\ in\ the\ console\n
numComments=9
