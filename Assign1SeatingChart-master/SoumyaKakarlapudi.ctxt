#BlueJ class context
comment0.target=SoumyaKakarlapudi
comment0.text=\n\ The\ SoumyaKakarlapudi\ class\ can\ be\ used\ as\ a\ model\ for\ your\ own\ class\ that\ represents\ you\ and\ your\ seating\ location\ in\ AP\ CSA.\n\ This\ class\ allows\ the\ character\ to\ move,\ display\ a\ message,\ and\ answer\ questions\ from\ a\ pre-determined\ response.\ \n\ \n\ @Soumya\ Kakarlapudi\ \n\ @version\ 2.0\ September\ 11,\ 2019\n
comment1.params=f\ l\ r\ s
comment1.target=SoumyaKakarlapudi(java.lang.String,\ java.lang.String,\ int,\ int)
comment1.text=\n\ Constructor\ for\ the\ SoumyaKakarlapudi\ class.\n\ Constructors\ are\ special\ methods\ with\ the\ same\ exact\ name\ as\ the\ class\ name.\ \ \n\ Constructors\ to\ not\ have\ return\ types.\n\ Constructors\ can\ be\ overloaded.\ This\ means\ we\ can\ call\ a\ constructor\ with\ different\ sets\ of\ parameter\n\ \ lists\ to\ initalize\ for\ different\ conditions\ (depending\ on\ what\ constructors\ have\ been\ written.\n\ @param\ String\ f\ (firstname)\n\ @param\ String\ l\ (lastname)\n\ @param\ int\ r\ (row\ of\ seating\ arrangement)\n\ @param\ int\ s\ (seat\ number\ within\ row\ seating\ arrangement)\n\ \n
comment2.params=
comment2.target=SoumyaKakarlapudi()
comment2.text=\n\ Default\ constructor,\ sets\ the\ constructors\ to\ a\ value\ for\ the\ name,row/seat,\ and\ image\ file\ when\ sitting\ or\ standing.\ \n\ Sets\ the\ Image\ and\ appears\ in\ the\ world.\ \n
comment3.params=
comment3.target=void\ act()
comment3.text=\n\ When\ the\ world\ is\ intialized,\ the\ default\ is\ a\ sitting\ portrait\ of\ the\ student\ and\ displays\ a\ message\ of\ the\ favorite\ hobby.\ Also\n\ includes\ a\ verbal\ speech\ of\ the\ name\ and\ does\ an\ animation\ defined\ in\ circleClass\ method.\ \n
comment4.params=
comment4.target=void\ getName()
comment4.text=\n\ Prints\ the\ first\ and\ last\ name\ to\ the\ console\n
comment5.params=
comment5.target=void\ answerQuestion()
comment5.text=\n\ This\ method\ needs\ to\ allow\ the\ user\ to\ interact\ with\ the\ student\ through\ a\ question\ and\ answer\ interface,\ and\ provide\n\ some\ mechanism\ that\ allows\ the\ student\ to\ sit\ down\ once\ the\ Q&A\ session\ ends.\ \ You\ can\ use\ this\ basic\ model,\ or\ come\ up\n\ with\ some\ additional\ class\ and\ object\ that\ represents\ a\ blackboard,\ or\ a\ talking\ cartoon\ bubble\ etc.\ If\ you\ provide\ extra\n\ classes,\ make\ sure\ to\ fully\ document\ so\ other\ students\ can\ use\ the\ same\ interface.\n
comment6.params=
comment6.target=void\ circleClass()
comment6.text=\n\ This\ is\ a\ local\ public\ void\ method\ specific\ to\ the\ SoumyaKakarlapudi\ class\ used\ to\ animate\ the\ character\ once\ the\ image\ is\ clicked\ on.\n\ This\ uses\ a\ Math.random\ function\ to\ take\ the\ student\ around\ the\ classroom\ first.\ Then\ a\ series\ of\ 2D\ arrays\ are\ used\ to\ create\ a\ up\ and\ zigzag\n\ animation\ on\ the\ classroom.\ \ Finally,\ it\ returns\ to\ the\ seat\ before\ the\ student\ is\ asked\ questions.\ \n
comment7.params=s
comment7.target=void\ myHobby(java.lang.String)
comment7.text=\n\ This\ is\ a\ void\ method\ that\ prints\ my\ hobby\ on\ a\ new\ line\ when\ the\ function\ is\ run\n
numComments=8
